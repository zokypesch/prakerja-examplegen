package main

// Code generated by sangkuriang protoc-gen-go. DO NOT EDIT.
// source: platform.proto_platform
// File Location: rPlatform.main.go

import (
	"fmt"
	"log"
	platform "github.com/zokypesch/prakerja-examplegen/platform"
	sv "github.com/zokypesch/prakerja-examplegen/handler"

	pb "github.com/zokypesch/prakerja-examplegen/grpc/pb/platform"
	core "github.com/zokypesch/proto-lib/core"
	config "github.com/zokypesch/prakerja-examplegen/config"

	"net"
)

func main() {

	cfg := config.Get()

	db := core.InitDB(cfg.DBAddress, cfg.DBName, cfg.DBUser, cfg.DBPassword, cfg.DBPort)
	lis, errList := net.Listen("tcp", fmt.Sprintf(":%s", cfg.GRPCPORT))

	if errList != nil {
		log.Fatal(errList)
	}

	masterRepo := platform.NewMasterRepoService(db)
	masterService := platform.NewPlatformService(masterRepo)
	
	handler := sv.NewPlatform(masterService)
	server := core.RegisterGRPC([]string{}, cfg.INTERNALPASSWORD)

	pb.RegisterPlatformServer(server, handler)

	go func() {
		if err := server.Serve(lis); err != nil {
			log.Fatalf("failed to serve: %v", err)
		}
	}()

	log.Println("starting server")

	if err := core.RunHTTP(pb.InitCallGRPC, pb.RegisterPlatformHandlerFromEndpoint, cfg.GRPCClient, cfg.GRPCPORT, cfg.PORT); err != nil {
		log.Fatal(err)
	}
}


